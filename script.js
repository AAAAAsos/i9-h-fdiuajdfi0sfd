// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
let balance = parseInt(localStorage.getItem("balance")) || 0;
let energy = 100; // –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–Ω–µ—Ä–≥–∏–∏
let maxEnergy = parseInt(localStorage.getItem("maxEnergy")) || 100; // –ó–∞–≥—Ä—É–∂–∞–µ–º maxEnergy –∏–∑ localStorage
let clickBonus = parseInt(localStorage.getItem("clickBonus")) || 1; // –ó–∞–≥—Ä—É–∂–∞–µ–º clickBonus –∏–∑ localStorage
let multitapLevel = parseInt(localStorage.getItem("multitapLevel")) || 1;
let energyLimitLevel = parseInt(localStorage.getItem("energyLimitLevel")) || 1;
let isRestoringEnergy = false; // –§–ª–∞–≥ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏ —ç–Ω–µ—Ä–≥–∏–∏
document.getElementById("balance").textContent = balance;
document.getElementById("energy").textContent = `${energy} / ${maxEnergy}`;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏
function restoreEnergy() {
    if (energy < maxEnergy) {
        energy += 1;
        document.getElementById("energy").textContent = `${energy} / ${maxEnergy}`;
    } else {
        isRestoringEnergy = false;
    }
}

// –¢–∞–π–º–µ—Ä –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –∫–∞–∂–¥—ã–µ 0,25 —Å–µ–∫—É–Ω–¥—ã, –µ—Å–ª–∏ —ç–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
setInterval(() => {
    if (isRestoringEnergy) {
        restoreEnergy();
    }
}, 250);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –º–æ–Ω–µ—Ç—É
document.getElementById("coin").addEventListener("click", (event) => {
    if (energy > 0) {
        balance += clickBonus;
        energy -= 1;

        document.getElementById("balance").textContent = balance;
        document.getElementById("energy").textContent = `${energy} / ${maxEnergy}`;
        localStorage.setItem("balance", balance);

        if (energy === 0 && !isRestoringEnergy) {
            isRestoringEnergy = true;
        }

        const clickEffect = document.createElement("div");
        clickEffect.classList.add("click-effect");
        clickEffect.textContent = `+${clickBonus}`;
        
        const coinRect = event.target.getBoundingClientRect();
        clickEffect.style.left = `${event.clientX - coinRect.left - 10}px`;
        clickEffect.style.top = `${event.clientY - coinRect.top - 10}px`;

        document.getElementById("coin").appendChild(clickEffect);

        setTimeout(() => {
            clickEffect.remove();
        }, 1000);

        const clickX = event.clientX - coinRect.left;
        const clickY = event.clientY - coinRect.top;
        const coin = document.getElementById("coin");

        if (clickX < coinRect.width / 3) {
            coin.style.transform = "rotateY(-30deg)";
        } else if (clickX > (coinRect.width * 2) / 3) {
            coin.style.transform = "rotateY(30deg)";
        } else if (clickY < coinRect.height / 3) {
            coin.style.transform = "rotateX(30deg)";
        } else if (clickY > (coinRect.height * 2) / 3) {
            coin.style.transform = "rotateX(-30deg)";
        }

        setTimeout(() => {
            coin.style.transform = "rotateX(0) rotateY(0)";
        }, 100);
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, type) {
    const notificationContainer = document.getElementById("notification-container");
    const notification = document.createElement("div");
    notification.className = `notification ${type}`;
    
    const icon = document.createElement("span");
    icon.className = "icon";
    icon.innerHTML = type === "success" ? "‚úîÔ∏è" : "‚ùå";
    notification.appendChild(icon);

    const text = document.createElement("span");
    text.textContent = message;
    notification.appendChild(text);

    const closeIcon = document.createElement("span");
    closeIcon.className = "close-icon";
    closeIcon.textContent = "‚úñ";
    closeIcon.onclick = () => notification.remove();
    notification.appendChild(closeIcon);

    notificationContainer.appendChild(notification);

    setTimeout(() => {
        notification.remove();
    }, 2000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫—É–ø–∫–∏ "–ú—É–ª—å—Ç–∏–†–æ–±—É–∫—Å"
function buyMultitap() {
    const cost = 200 * multitapLevel; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
    if (balance >= cost && multitapLevel < 8) {
        balance -= cost;
        clickBonus += multitapLevel; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–æ–Ω—É—Å –∫–ª–∏–∫–∞
        multitapLevel += 1; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å
        localStorage.setItem("balance", balance);
        localStorage.setItem("clickBonus", clickBonus);
        localStorage.setItem("multitapLevel", multitapLevel);
        closeUpgradeDetails();
        showNotification("–ú—É–ª—å—Ç–∏–†–æ–±—É–∫—Å —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–µ–Ω!", "success");
    } else if (multitapLevel >= 8) {
        showNotification("–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å!", "error");
    } else {
        showNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", "error");
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫—É–ø–∫–∏ "–õ–∏–º–∏—Ç —ç–Ω–µ—Ä–≥–∏–∏"
function buyEnergyLimit() {
    const cost = 200 * energyLimitLevel; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
    if (balance >= cost && energyLimitLevel < 8) {
        balance -= cost;
        maxEnergy += 50 * energyLimitLevel; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏
        energyLimitLevel += 1; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å
        localStorage.setItem("balance", balance);
        localStorage.setItem("maxEnergy", maxEnergy);
        localStorage.setItem("energyLimitLevel", energyLimitLevel);
        document.getElementById("energy").textContent = `${energy} / ${maxEnergy}`;
        closeUpgradeDetails();
        showNotification("–õ–∏–º–∏—Ç —ç–Ω–µ—Ä–≥–∏–∏ —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–µ–Ω!", "success");
    } else if (energyLimitLevel >= 8) {
        showNotification("–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å!", "error");
    } else {
        showNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", "error");
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏
function buyEnergyRestore() {
    if (balance >= 500) {
        balance -= 500;
        energy = maxEnergy; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç–Ω–µ—Ä–≥–∏—é –¥–æ –º–∞–∫—Å–∏–º—É–º–∞
        localStorage.setItem("balance", balance);
        document.getElementById("energy").textContent = `${energy} / ${maxEnergy}`;
        closeUpgradeDetails();
        showNotification("–≠–Ω–µ—Ä–≥–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!", "success");
    } else {
        showNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", "error");
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ —É—Ä–æ–≤–Ω–µ –≤ –ø–∞–Ω–µ–ª–∏ –ø—Ä–æ–∫–∞—á–∫–∏
function updateUpgradePanelInfo() {
    const multitapCost = 200 * multitapLevel;
    const energyLimitCost = 200 * energyLimitLevel;

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ú—É–ª—å—Ç–∏–†–æ–±—É–∫—Å
    document.querySelector("#multitap-cost").textContent = `${multitapCost}`;
    document.querySelector("#multitap-level").textContent = `${multitapLevel} —É—Ä–æ–≤–µ–Ω—å`;

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –õ–∏–º–∏—Ç —ç–Ω–µ—Ä–≥–∏–∏
    document.querySelector("#energy-limit-cost").textContent = `${energyLimitCost}`;
    document.querySelector("#energy-limit-level").textContent = `${energyLimitLevel} —É—Ä–æ–≤–µ–Ω—å`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ –ø—Ä–æ–∫–∞—á–∫–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
function togglePanel() {
    const panel = document.getElementById("upgrade-panel");
    panel.classList.toggle("open");

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ —É—Ä–æ–≤–Ω–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É–ª—É—á—à–µ–Ω–∏—è
    updateUpgradePanelInfo();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —É–ª—É—á—à–µ–Ω–∏—è
function openUpgradeDetails(upgrade) {
    const details = document.getElementById("upgrade-details");
    const content = document.getElementById("upgrade-details-content");
    const upgradeButton = document.querySelector(".get-upgrade");

    // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π
    upgradeButton.disabled = false;
    upgradeButton.classList.remove("locked");

    details.style.display = "flex";

    if (upgrade === "multitap") {
        const cost = 200 * multitapLevel;
        content.innerHTML = `
            <h2>–ú—É–ª—å—Ç–∏–†–æ–±—É–∫—Å</h2>
            <p>–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–ø–æ–≤ –∑–∞ –æ–¥–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ.</p>
            <p>+${multitapLevel} —Ç–∞–ø –∑–∞ —É—Ä–æ–≤–µ–Ω—å.</p>
            <p><img src="coin.png" class="coin-icon"> ${cost} | ${multitapLevel} —É—Ä–æ–≤–µ–Ω—å</p>
        `;
        upgradeButton.textContent = `–ö—É–ø–∏—Ç—å –∑–∞ ${cost}`;
        upgradeButton.onclick = buyMultitap;
        if (multitapLevel >= 8) {
            upgradeButton.disabled = true;
            upgradeButton.classList.add("locked");
            upgradeButton.innerHTML = "üîí –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å";
        }
    } else if (upgrade === "energy") {
        const cost = 200 * energyLimitLevel;
        content.innerHTML = `
            <h2>–õ–∏–º–∏—Ç —ç–Ω–µ—Ä–≥–∏–∏</h2>
            <p>–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç —ç–Ω–µ—Ä–≥–∏–∏.</p>
            <p>+${50 * energyLimitLevel} –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏ –∑–∞ —É—Ä–æ–≤–µ–Ω—å.</p>
            <p><img src="coin.png" class="coin-icon"> ${cost} | ${energyLimitLevel} —É—Ä–æ–≤–µ–Ω—å</p>
        `;
        upgradeButton.textContent = `–ö—É–ø–∏—Ç—å –∑–∞ ${cost}`;
        upgradeButton.onclick = buyEnergyLimit;
        if (energyLimitLevel >= 8) {
            upgradeButton.disabled = true;
            upgradeButton.classList.add("locked");
            upgradeButton.innerHTML = "üîí –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å";
        }
    } else if (upgrade === "restore") {
        content.innerHTML = `
            <h2>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é</h2>
            <p>–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏.</p>
            <p><img src="coin.png" class="coin-icon"> 500</p>
        `;
        upgradeButton.textContent = "–ö—É–ø–∏—Ç—å –∑–∞ 500";
        upgradeButton.onclick = buyEnergyRestore;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram Web App
function initTelegramUser() {
    const user = Telegram.WebApp.initDataUnsafe?.user;

    if (user) {
        // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –∏ –∏–º–µ–Ω–∏
        const userAvatar = document.getElementById("user-avatar");
        const userName = document.getElementById("user-name");

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤–∞—Ç–∞—Ä (–∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π, –µ—Å–ª–∏ –Ω–µ—Ç URL)
        userAvatar.src = user.photo_url || "https://avatars.mds.yandex.net/i?id=9e5034f9f00e1fdedb4c9712c99df899ba4bedc7-6994888-images-thumbs&n=13"; // –ó–∞–º–µ–Ω–∏—Ç–µ "default_avatar.png" –Ω–∞ URL –∫ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π –∞–≤–∞—Ç–∞—Ä–∫–µ
        userName.textContent = user.username || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏ "–î—Ä—É–∑—å—è"
function toggleReferralPanel() {
    const panel = document.getElementById("referral-panel");
    panel.style.display = panel.style.display === "flex" ? "none" : "flex";
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î—Ä—É–∑—å—è"
document.getElementById("friends-button").addEventListener("click", toggleReferralPanel);

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
function generateReferralLink(ownerId) {
    return `https://t.me/RobuxTap?start=${ownerId}`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram Mini App
const ownerId = Telegram.WebApp.initDataUnsafe?.user?.id;
const referralLink = generateReferralLink(ownerId);
document.getElementById("invite-link").value = referralLink;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
document.getElementById("copy-link").addEventListener("click", () => {
    navigator.clipboard.writeText(referralLink).then(() => {
        showNotification("–°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!", "success");
    }).catch(() => {
        showNotification("–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è!", "error");
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –±–æ–Ω—É—Å–∞ –∏ —Å–ø–∏—Å–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
async function fetchReferralData() {
    try {
        const response = await fetch(`https://yourserver.com/referral-data?user_id=${ownerId}`);
        const data = await response.json();

        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –±–æ–Ω—É—Å –∏ —Å–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        document.getElementById("ref-bonus").textContent = data.bonus || 0;
        document.getElementById("ref-count").textContent = data.referrals.length;

        const referralList = document.getElementById("referral-list");
        referralList.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫

        data.referrals.forEach(referral => {
            const newReferral = document.createElement("li");
            newReferral.textContent = `–†–µ—Ñ–µ—Ä–∞–ª ID: ${referral.id}`;
            referralList.appendChild(newReferral);
        });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:", error);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–Ω–µ–ª–∏ "–î—Ä—É–∑—å—è" –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener("DOMContentLoaded", () => {
    fetchReferralData(); // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –±–æ–Ω—É—Å–∞—Ö –∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö
});


document.getElementById("boost-button").addEventListener("click", togglePanel);
